import MyInput from "../components/TextInput";
import { myRenderNode } from "../components/my-type";
import { tableRenderer } from "./info";

type RenderedSlottedHook = Parameters<typeof logseq.App.onMacroRendererSlotted>[0]

export const onMacroRendererSlotted: RenderedSlottedHook = (evt) => {
  const { slot, payload } = evt // get slot id generated by logseq
  const [rendererName, content] = payload.arguments // see SlotData

  if (!rendererName?.startsWith(`:${tableRenderer.name}`)) return
  console.debug("onMacroRendererSlotted event", evt)

  const renderId = rendererName.split('_')[1]?.trim()
  if (!renderId) return


  return logseq.provideUI({
    key: tableRenderer.genId(renderId), // this is part of the dom id. see keepKey
    slot, // this var name should be slotid. slot means to insert into editor block. Otherwise, the plugin window will float. <div> with slot__id will wrapper outside your plugin window
    reset: true,
    template: myRenderNode(MyInput, {
      renderId,
      content: content ? content : "Hi",
      blockUuid: payload.uuid
    })
  })
}